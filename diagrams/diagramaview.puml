@startuml
    left to right direction
    package ui.view {
        together{
            class SettingsActivity {
                        - binding: SettingsActivityBinding
                        - viewModel: SettingsViewModel
                        - folderPicker: FilePicker
                        - filePicker: FilePicker
                        # onCreate(savedInstanceState: Bundle?)
                        # onResume()
                        - checkBackupButtons()
                        - observeBackupState()
                        - checkAutofill()
                        - checkBiometric()
                        - setListeners()
                        - updateBackupLocationText()
                        - requestAutofillService()
                        - hasEnabledAutofill(): Boolean
                    }
                    class RegisterActivity {
                        - binding: CreateMasterPasswordBinding
                        - viewModel: RegisterViewModel
                        - label: String
                        # onCreate(savedInstanceState: Bundle?)
                        - changeProgressBar(strength: PasswordStrength)
                        - setObserver()
                        - setListener()
                        - setAfterTextChanged()
                        - biometricActivity()
                    }
                    class MainActivity {
                        - binding: ScreenHomeBinding
                        - viewModel: MainViewModel
                        # onCreate(savedInstanceState: Bundle?)
                        - setListeners()
                        - isLoggedIn(): Boolean
                        - login()
                    }
                    class LoginActivity {
                        - binding: LoginScreenBinding
                        - viewModel: LoginViewModel
                        # onCreate(savedInstanceState: Bundle?)
                        - setObserversPassword()
                        - setObserversBiometric()
                        - setListeners()
                        - skip()
                    }
                    class HomeActivity {
                        - isSearchMode: Boolean
                        - binding: MainScreenBinding
                        - viewModel: HomeViewModel
                        - passwordAdapter: PasswordAdapter
                        + {static} PASSWORD_RELOAD_REQUEST_KEY: String
                        # onCreate(savedInstanceState: Bundle?)
                        # onResume()
                        - setObservers()
                        - setListeners()
                        - setupRecyclerView()
                        - enterSearchMode()
                        - exitSearchMode()
                    }
                    class BiometricActivity {
                        - binding: BiometricSugestionBinding
                        - viewModel: BiometricViewModel
                        # onCreate(savedInstanceState: Bundle?)
                        - setObservers()
                        - setListeners()
                        - skip()
                    }
        }
    }
    package ui.view.dialogs {
        together{
        class ChangeMasterPasswordDialog {
                    - binding: CreateMasterPasswordBinding
                    - viewModel: RegisterViewModel
                    - label: String
                    + onCreateDialog(savedInstanceState: Bundle?): Dialog
                    - changeProgressBar(strength: PasswordStrength)
                    - setObserver()
                    - setListeners()
                    - setAfterTextChanged()
                }
                class CreatePasswordDialog {
                    - binding: CreatePasswordDialogBinding
                    - viewModel: CreatePasswordViewModel
                    - supportFragmentManager: FragmentManager
                    + onCreateDialog(savedInstanceState: Bundle?): Dialog
                    - setListeners()
                    - getPassword(): PasswordDto?
                    - showToast(field: String)
                }
                class ExportPasswordDialog {
                    - binding: DialogExportBinding
                    - filePicker: FilePicker
                    - folderUri: Uri?
                    - viewModel: ExportPasswordViewModel
                    + onCreateDialog(savedInstanceState: Bundle?): Dialog
                    - setListeners()
                    - observeLoadingState()
                    - showToast(message: String)
                    - handleFile(folderUri: Uri)
                    - selectFolder()
                    - getFolderNameFromUri(uri: Uri): String?
                    - setPasswordInput()
                    - getPassword(): String?
                }
                class GeneratePasswordDialog {
                    - binding: PasswordGeneratorBinding
                    - viewModel: GeneratePasswordViewModel
                    + {static} REQUEST_KEY: String
                    + onCreateDialog(savedInstanceState: Bundle?): Dialog
                    - setListeners()
                    - setUpView()
                    - setObservers()
                    - changeStrengthBar(strength: PasswordStrength)
                    - generatePassword()
                    - generatePassphrase()
                }
                class ImportPasswordDialog {
                    - binding: DialogImportBinding
                    - filePicker: FilePicker
                    - fileUri: Uri?
                    - viewModel: ImportPasswordViewModel
                    + {static} - ENCRYPTED: String
                    + {static} - CSV: String
                    + onCreateDialog(savedInstanceState: Bundle?): Dialog
                    - setPasswordInput()
                    - getFileNameFromUri(uri: Uri): String?
                    - setListeners()
                    - openFile(fileType: String)
                    - handleFile(uri: Uri)
                    - observeLoadingState()
                    - observeErrorState()
                    - showToast(message: String)
                }
                class PasswordDetailDialog {
                    - binding: PasswordDetailBinding
                    - viewModel: PasswordDetailViewModel
                    - passwordDto: PasswordDto
                    + onCreateDialog(savedInstanceState: Bundle?): Dialog
                    - setContent()
                    - setListeners()
                    - getPassword(): PasswordDto?
                    - showToast(field: String)
                }
        }
    }
    package ui.biometrics {
        class BiometricPromptManager {
            - activity: AppCompatActivity
            - resultChannel: Channel<BiometricResult>
            + promptResults: Flow<BiometricResult>
            + showBiometricPrompt(title: String, description: String, cryptoObject: BiometricPrompt.CryptoObject?)
        }
    }

class SecureVaultApp


@enduml
